
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.StringReader;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.text.DateFormat;
import java.text.ParseException;


public class PracticaADEJ1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
	
//		crearDirectorios();
//		registrarFechayHora();
//		registroConexiones();
//		numeroLineas(1);
		prueba();
		

	}
	
	public static void crearDirectorios(){
		String ruta = ".\\P1AD";
		File dir = new File(ruta);
		boolean creado = false;
		
		String ruta2 = ".\\P1AD\\actividad";
		File dir1 = new File(ruta2);
		boolean creado2 = false;
		
		String ruta3 = ".\\P1AD\\net";
		File dir2 = new File(ruta3);
		boolean creado3 = false;
		
		if(dir.exists() || dir2.exists() || dir1.exists()){
			System.out.println("El directorio " + ruta + " ya existe.");
		} else {
			//Crea un directorio
			creado = dir.mkdir();
			creado2 = dir1.mkdir();
			creado3 = dir2.mkdir();
		}
		
		if(creado && creado2 && creado3){
			System.out.println("Los directorios " + ruta + 
					" , " + ruta2 + " y "
					+ ruta3 + " se han creado correctamente. ");
		} else {
			System.out.println("Los directorios no se han creado");
		}
	}
	
	public static void registrarFechayHora(){
		
		String nombre = System.getProperty("user.name");
		String rutafichero = ".\\P1AD\\actividad\\" + nombre + ".log";
		File fichero = new File(rutafichero);
		
		SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		Date fecha= new Date();
		
		try {
			BufferedWriter bw = null;
			if(fichero.exists() ) {
				System.out.println("El fichero ya existe."); 
				bw = new BufferedWriter(new FileWriter(fichero, true));    
				System.out.println("añadiendo fecha actual...");
				bw.write(simpleDateFormat.format( fecha ));
				
	        } else {
	           bw = new BufferedWriter(new FileWriter(fichero));      
	           System.out.println("El fichero" + fichero +" se ha creado correctamente."); 
	           bw.write(simpleDateFormat.format( fecha ));
	           System.out.println("añadiendo fecha actual...");       
	        }
			bw.newLine();
			bw.close(); 
			}catch(IOException e){
			System.out.println("IOException detected.");
		}
		
	}


	public static void registroConexiones() {
		// Creo una lista para meter los archivos que hay dentro de la carpeta net
			List<String> listaficheros = new ArrayList<>();
			String path = ".\\P1AD\\net";
			File carpeta = new File(path);
			String[] listado = carpeta.list();
			
			String path2 = ".\\P1AD\\net\\netstat_1.log";
			File file = new File(path2);
			
			
		
		try {
			file.createNewFile();
			Process p = Runtime.getRuntime().exec("netstat /a");
			InputStream is = p.getInputStream();
			BufferedReader br = new BufferedReader(new InputStreamReader(is));
			String aux = br.readLine();

			FileReader fr = new FileReader(path2);
			BufferedReader bf = new BufferedReader(fr);

			if (listado == null || listado.length == 0) {
				System.out.println("No hay elementos dentro de la carpeta actual");
			}

			int numeroLineasEscribir = 0;
			int numeroLineasDisponibles = 0;
			int numeroLineasFichero = 0;
			int limite = 200;
			BufferedWriter bw = null;
			if (file.exists()) {

				System.out.println("El fichero" + file + "ya existe");
				bw = new BufferedWriter(new FileWriter(file, true));

				while (br.readLine() != null) {
					numeroLineasEscribir++;

				}
				
				System.out.println("El process tiene " + numeroLineasEscribir + " lineas");

				while (bf.readLine() != null) {
					numeroLineasFichero++;

				}
			
				System.out.println("El documento tiene " + numeroLineasFichero + " lineas");

				numeroLineasDisponibles = limite - numeroLineasFichero;
				System.out.println("lineas disponibles: " + numeroLineasDisponibles);

				if (numeroLineasEscribir < numeroLineasDisponibles) {

					System.out.println("Escribiendo conexiones de red en el fichero:" + file);
					System.out.println(aux);
					while (aux != null) {
						System.out.println(aux);
						bw.write(aux + "\n");
						aux = br.readLine();

					}
					bw.close();

				} else if (numeroLineasEscribir >= numeroLineasDisponibles) {
					// lineas disponiles hay que rellenarlas
					System.out.println("Las Lineas a escribir son mas de las disponibles");
					numeroLineasEscribir = numeroLineasEscribir - numeroLineasDisponibles;
					for (int i = 2; i < 10; i++) {

						String rutaficheroi = ".\\P1AD\\net\\netstat_" + i + ".log";
						File ficheroi = new File(rutaficheroi);
						ficheroi.createNewFile();
						System.out.println("El fichero" + ficheroi + " se ha creado correctamente");

					}

				}

			} else {
				file.createNewFile();
				System.out.println("El fichero" + file + " se ha creado correctamente");

				bw = new BufferedWriter(new FileWriter(file));

				while (br.readLine() != null) {
					numeroLineasEscribir++;

				}
				
				System.out.println("El process tiene " + numeroLineasEscribir + " lineas");

				while (bf.readLine() != null) {
					numeroLineasFichero++;

				}
				System.out.println("El documento tiene " + numeroLineasFichero + " lineas");

				numeroLineasDisponibles = limite - numeroLineasFichero;

				System.out.println("lineas disponibles: " + numeroLineasDisponibles);

				if (numeroLineasEscribir < numeroLineasDisponibles) {

					System.out.println("Escribiendo conexiones de red en el fichero:" + file);
					System.out.println(aux);
					while (aux != null) {
						System.out.println(aux);
						bw.write(aux + "\n");
						aux = br.readLine();

					}
					bw.close();
				} else if (numeroLineasEscribir >= numeroLineasDisponibles) {
					// lineas disponiles hay que rellenarlas
					System.out.println("Las Lineas a escribir son mas de las disponibles");
					numeroLineasEscribir = numeroLineasEscribir - numeroLineasDisponibles;

				}

			}

//					
//			for (int i=0; i< listado.length; i++) {
//				listaficheros.add(listado[i]);
//	
//				System.out.println(listaficheros);
//				
//			}
//			for(String str: listaficheros) {
//				
//				System.out.println(str);
//				
//				
//			}
//	
		}

		catch (IOException e) {
			System.out.println("IOException detected.");
			 e.printStackTrace();
		}
	}

	public static void prueba() {
		String path = ".\\P1AD\\net";
		File carpeta = new File(path);
		
		String path2 = ".\\P1AD\\net\\netstat_1.log";
		File file = new File(path2);
		try {
			Process p = Runtime.getRuntime().exec("netstat /a");
			InputStream is = p.getInputStream();
			BufferedReader br = new BufferedReader(new InputStreamReader(is));
			String aux = br.readLine();

			FileReader fr = new FileReader(path2);
			BufferedReader bf = new BufferedReader(fr);

			int numeroLineasEscribir = 0;
			int numeroLineasDisponibles = 0;
			int numeroLineasFichero = 0;
			int limite = 200;
			BufferedWriter bw = null;
			if (file.exists()) {

				System.out.println("El fichero" + file + "ya existe");
				bw = new BufferedWriter(new FileWriter(file, true));

				while (br.readLine() != null) {
					numeroLineasEscribir++;

				}
				br.close();
				System.out.println("El process tiene " + numeroLineasEscribir + " lineas");

				while (bf.readLine() != null) {
					numeroLineasFichero++;

				}
				bf.close();
				System.out.println("El documento tiene " + numeroLineasFichero + " lineas");

				numeroLineasDisponibles = limite - numeroLineasFichero;
				System.out.println("lineas disponibles: " + numeroLineasDisponibles);

				if (numeroLineasEscribir < numeroLineasDisponibles) {

					System.out.println("Escribiendo conexiones de red en el fichero:" + file);
					System.out.println(aux);
					while (aux != null) {
						System.out.println(aux);
						bw.write(aux + "\n");
						aux = br.readLine();

					}
					bw.close();

				
				}

			} else {
				file.createNewFile();
				System.out.println("El fichero" + file + " se ha creado correctamente");

				bw = new BufferedWriter(new FileWriter(file));

				while (br.readLine() != null) {
					numeroLineasEscribir++;

				}
				
				System.out.println("El process tiene " + numeroLineasEscribir + " lineas");

				while (bf.readLine() != null) {
					numeroLineasFichero++;

				}
				System.out.println("El documento tiene " + numeroLineasFichero + " lineas");

				numeroLineasDisponibles = limite - numeroLineasFichero;

				System.out.println("lineas disponibles: " + numeroLineasDisponibles);

				if (numeroLineasEscribir < numeroLineasDisponibles) {

					System.out.println("Escribiendo conexiones de red en el fichero:" + file);
					System.out.println(aux);
					while (aux != null) {
						System.out.println(aux);
						bw.write(aux + "\n");
						aux = br.readLine();

					}
					bw.close();
				} else if (numeroLineasEscribir >= numeroLineasDisponibles) {
					// lineas disponiles hay que rellenarlas
					System.out.println("Las Lineas a escribir son mas de las disponibles");
					numeroLineasEscribir = numeroLineasEscribir - numeroLineasDisponibles;

				}

			}

			
		}

		catch (IOException e) {
			System.out.println("IOException detected.");
			e.printStackTrace();
		}
	}
	
}
	
		